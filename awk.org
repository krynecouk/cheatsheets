#+TITLE: AWK
* Concept
Semicolon is delimiter between operators. If only one operator or last than can be without ~;~.
- ~BEGIN{}~
  + Execute commands from ~BEGIN~ block (once and optional)
- ~{BODY}~
  + Read a line from input stream
  + Execute AWK commands on a line
  + Repeat until ~END~
- ~END{}~
  + Execute commands from ~END~ block (once and optional)
* Test Data
marks.txt
#+BEGIN_SRC
1)  Amit    Physics  80
2)  Rahul   Maths    90
3)  Shyam   Biology  87
4)  Kedar   English  85
5)  Hari    History  89
#+END_SRC
* Run
** CLI
~awk [OPTIONS] file.txt~
** File
~awk [OPTIONS] -f file.awk file.txt~
* [OPTIONS]
** ~-v~
Assigns a value to a variable.
#+BEGIN_SRC awk
awk -v name=Jerry 'BEGIN{printf "Name = %s\n", name}'
#+END_SRC

* Functions
** ~print~
#+BEGIN_SRC awk
awk 'BEGIN {print "SR\tNo\tName\tMarks"} {print $1 "\t" $2 "\t" $3 "\t" $4 "\t" $5}' marks.txt
#+END_SRC
** ~printf~
** ~length~
#+BEGIN_SRC awk
awk 'length($0) > 18' marks.txt
#+END_SRC

* Patterns
~awk '/pattern/' file.txt~
#+BEGIN_SRC awk
awk '/a/{++pocet} END {print "Pocet = ", pocet}' marks.txt
#+END_SRC

* Control Flow
** if
~if (condition) action~
#+BEGIN_SRC awk
awk 'BEGIN {num = 10; if (num % 2 == 0) printf "%d is even number.\n", num }'
#+END_SRC
** if-else
#+BEGIN_SRC awk
awk 'BEGIN {
   num = 11; if (num % 2 == 0) printf "%d is even number.\n", num;
      else printf "%d is odd number.\n", num
}'
#+END_SRC
* Loop
** ~for~
#+BEGIN_SRC awk
awk 'BEGIN { for (i = 1; i <= 5; ++i) print i }'
#+END_SRC
** ~while~
#+BEGIN_SRC awk
awk 'BEGIN {i = 1; while (i < 6) { print i; ++i } }'
#+END_SRC
* Functions
#+BEGIN_SRC awk
function find_min(num1, num2){
   if (num1 < num2)
    return num1
   return num2
}
#+END_SRC

* Sources
1. [[https://www.tutorialspoint.com/awk/index.htm][AWK Tutorial]]
